{
  "id": "maggic-mlp-fs",
  "url": "https://ai4hf.eu/feature-sets/maggic-mlp",
  "name": "maggic-mlp-fs",
  "title": "MAGGIC-MLP Features",
  "description": "Set of extracted features for MAGGIC-MLP",
  "status": "active",
  "version": "1.2",
  "date": "2025-07-24",
  "publisher": "AI4HF Team (SRDC Corp.)",
  "entity": [
    {
      "name": "pid",
      "description": "A unique identifier assigned to each patient in the cohort."
    }
  ],
  "sampling": [
    {
      "description": "Divide the population into one-year intervals.",
      "period": "1a"
    }
  ],
  "secondaryTimePoint": [
    {
      "name": "lastRecordDate",
      "description": "The latest recorded end time from the patient's encounters.",
      "isPast": false,
      "select": "latest",
      "events": [
        {
          "url": "https://datatools4heart.eu/feature-groups/encounters",
          "join": {
            "on": {
              "pid": "pid"
            }
          },
          "eventTime": "endTime"
        }
      ]
    }
  ],
  "feature": [
    {
      "url": "https://datatools4heart.eu/feature-groups/patient_demographics",
      "join": {
        "on": {
          "pid": "pid"
        }
      },
      "feature": [
        {
          "name": "gender",
          "description": "Gender of the patient"
        },
        {
          "name": "age",
          "description": "Age of the patient at reference point",
          "value": {
            "path": "utl:getPeriod(birthDate, %referenceTimePoint, 'years')",
            "dataType": "integer"
          }
        }
      ]
    },
    {
      "url": "https://datatools4heart.eu/feature-groups/nyha",
      "join": {
        "on": {
          "pid": "pid"
        }
      },
      "feature": [
        {
          "name": "nyha",
          "description": "The latest value of the New York Heart Assessment as LOINC Code"
        }
      ]
    },
    {
      "url": "https://datatools4heart.eu/feature-groups/vital_signs",
      "join": {
        "on": {
          "pid": "pid"
        },
        "duration": "3a"
      },
      "pivot": {
        "name": "codes",
        "description": "Important vital signs",
        "values": [
          {
            "name": "systolic_blood_pressure",
            "value": "8480-6",
            "description": "Systolic blood pressure (mmHg)"
          },
          {
            "name": "bmi",
            "value": "39156-5",
            "description": "BMI (kg/m2)"
          }
        ]
      },
      "feature": [
        {
          "name": "value",
          "description": "The average value recorded over the three years preceding the reference time point.",
          "temporalAgg": [
            {
              "aggOp": [
                "avg"
              ]
            }
          ]
        }
      ]
    },
    {
      "url": "https://datatools4heart.eu/feature-groups/lab_results",
      "join": {
        "on": {
          "pid": "pid"
        },
        "duration": "3a"
      },
      "pivot": {
        "name": "codes",
        "description": "Important lab results",
        "values": [
          {
            "name": "sodium",
            "value": "2951-2",
            "description": "Sodium [Moles/volume] in Serum or Plasma (mmol/L)"
          },
          {
            "name": "creatinine",
            "value": "2160-0",
            "description": "Creatinine [Mass/volume] in Serum or Plasma (mg/L)"
          },
          {
            "name": "urinary_creatinine",
            "value": "2161-8",
            "description": "Creatinine [Mass/volume] in Urine (mg/L)"
          }
        ]
      },
      "feature": [
        {
          "name": "value",
          "description": "The average value recorded over the three years preceding the reference time point.",
          "temporalAgg": [
            {
              "aggOp": [
                "avg"
              ]
            }
          ]
        }
      ]
    },
    {
      "url": "https://datatools4heart.eu/feature-groups/conditions",
      "join": {
        "on": {
          "pid": "pid"
        }
      },
      "filter": {
        "name": "heart_failure",
        "description": "Find the Heart Failures.",
        "filter": "icd10Codes.select($this.startsWith('I50') or $this.startsWith('I11.0') or $this.startsWith('I13.0') or $this.startsWith('I13.2') or $this.startsWith('I26.0') or $this.startsWith('I25.5') or $this.startsWith('I09.81') or $this.startsWith('I97.13')).anyTrue()"
      },
      "feature": [
        {
          "name": "occurred_prior_to_18_months",
          "description": "Indicates whether the condition was diagnosed 18 months or more before the reference time point, corresponding to the criteria for 'Heart Failure (HF) â‰¥ 18 Months Prior.'",
          "value": {
            "path": "utl:getPeriod(date, %referenceTimePoint, 'months') >= 18",
            "dataType": "boolean"
          },
          "temporalAgg": [
            {
              "aggOp": [
                "any"
              ]
            }
          ]
        }
      ]
    },
    {
      "url": "https://datatools4heart.eu/feature-groups/conditions",
      "join": {
        "on": {
          "pid": "pid"
        }
      },
      "feature": [
        {
          "name": "has_chronic_obstructive_pulmonary_disease",
          "description": "Whether the patient has the Chronic Obstructive Pulmonary Disease (COPD).",
          "value": {
            "path": "icd10Codes.select($this.startsWith('J40') or $this.startsWith('J41') or $this.startsWith('J42') or $this.startsWith('J43') or $this.startsWith('J44')).anyTrue()",
            "dataType": "boolean"
          },
          "temporalAgg": [
            {
              "aggOp": [
                "any"
              ]
            }
          ]
        },
        {
          "name": "has_atrial_fibrillation",
          "description": "Whether the patient has the Atrial Fibrillations.",
          "value": {
            "path": "icd10Codes.select($this.startsWith('I48')).anyTrue()",
            "dataType": "boolean"
          },
          "temporalAgg": [
            {
              "aggOp": [
                "any"
              ]
            }
          ]
        },
        {
          "name": "has_myocardial_infarction",
          "description": "Whether the patient has the Myocardial Infarctions.",
          "value": {
            "path": "icd10Codes.select($this.startsWith('I21') or $this.startsWith('I22')).anyTrue()",
            "dataType": "boolean"
          },
          "temporalAgg": [
            {
              "aggOp": [
                "any"
              ]
            }
          ]
        },
        {
          "name": "has_pci",
          "description": "Whether the patient has the Percutaneous Coronary Intervention (PCI).",
          "value": {
            "path": "icd10Codes.select($this.startsWith('K49') or $this.startsWith('K50') or $this.startsWith('K75')).anyTrue()",
            "dataType": "boolean"
          },
          "temporalAgg": [
            {
              "aggOp": [
                "any"
              ]
            }
          ]
        },
        {
          "name": "has_cabg",
          "description": "Whether the patient has the Coronary Artery Bypass Graft (CABG) Surgeries.",
          "value": {
            "path": "icd10Codes.select($this.startsWith('K40') or $this.startsWith('K41') or $this.startsWith('K42') or $this.startsWith('K43') or $this.startsWith('K44') or $this.startsWith('K45') or $this.startsWith('K46') or $this.startsWith('K47')).anyTrue()",
            "dataType": "boolean"
          },
          "temporalAgg": [
            {
              "aggOp": [
                "any"
              ]
            }
          ]
        },
        {
          "name": "has_stroke",
          "description": "Whether the patient has the strokes.",
          "value": {
            "path": "icd10Codes.select($this.startsWith('I61') or $this.startsWith('I62') or $this.startsWith('I63') or $this.startsWith('I64') or $this.startsWith('I60')).anyTrue()",
            "dataType": "boolean"
          },
          "temporalAgg": [
            {
              "aggOp": [
                "any"
              ]
            }
          ]
        },
        {
          "name": "has_diabetes",
          "description": "Whether the patient has the diabetes.",
          "value": {
            "path": "icd10Codes.select($this.startsWith('E10') or $this.startsWith('E11') or $this.startsWith('E12') or $this.startsWith('E13') or $this.startsWith('E14')).anyTrue()",
            "dataType": "boolean"
          },
          "temporalAgg": [
            {
              "aggOp": [
                "any"
              ]
            }
          ]
        }
      ]
    },
    {
      "url": "https://datatools4heart.eu/feature-groups/med_admins",
      "join": {
        "on": {
          "pid": "pid"
        }
      },
      "filter": {
        "name": "beta_blocker_use",
        "description": "Find Beta Blocker medications.",
        "filter": "medicationGroups.select($this = 'BB').anyTrue() or (medicationCodes.select($this.startsWith('C07AA') or $this.startsWith('C07AB') or $this.startsWith('C07AG') or $this.startsWith('C07BA') or $this.startsWith('C07BB') or $this.startsWith('C07BG') or $this.startsWith('C07CA') or $this.startsWith('C07CB') or $this.startsWith('C07CG') or $this.startsWith('C07DA') or $this.startsWith('C07DB') or $this.startsWith('C07DG') or $this.startsWith('C07FB') or $this.startsWith('C07FX')).anyTrue())"
      },
      "feature": [
        {
          "name": "administered",
          "description": "Whether the medication administered.",
          "value": {
            "path": "true",
            "dataType": "boolean"
          }
        }
      ]
    },
    {
      "url": "https://datatools4heart.eu/feature-groups/med_admins",
      "join": {
        "on": {
          "pid": "pid"
        }
      },
      "filter": {
        "name": "ace_inhibitors_arb_use",
        "description": "Find ACE Inhibitors / ARB Use medications.",
        "filter": "medicationGroups.select($this = 'ACEI' or $this = 'ARB').anyTrue() or (medicationCodes.select($this.startsWith('C09AA') or $this.startsWith('C09BA') or $this.startsWith('C09BB02') or $this.startsWith('C09BB03') or $this.startsWith('C09BB04') or $this.startsWith('C09BB05') or $this.startsWith('C09BB06') or $this.startsWith('C09BB07') or $this.startsWith('C09BB08') or $this.startsWith('C09BB09') or $this.startsWith('C09BB010') or $this.startsWith('C09BB011') or $this.startsWith('C09BB012') or $this.startsWith('C09BX01') or $this.startsWith('C09BX02') or $this.startsWith('C09BX03') or $this.startsWith('C09BX04') or $this.startsWith('C09BX05') or $this.startsWith('C09CA') or $this.startsWith('C09DA') or $this.startsWith('C09DB') or $this.startsWith('C09DX01') or $this.startsWith('C09DX02') or $this.startsWith('C09DX03') or $this.startsWith('C09DX04') or $this.startsWith('C09DX05') or $this.startsWith('C09DX06') or $this.startsWith('C09DX07') or $this.startsWith('C09DX04')).anyTrue())"
      },
      "feature": [
        {
          "name": "administered",
          "description": "Whether the medication administered.",
          "value": {
            "path": "true",
            "dataType": "boolean"
          }
        }
      ]
    },
    {
      "url": "https://datatools4heart.eu/feature-groups/echocardiographs",
      "join": {
        "on": {
          "pid": "pid"
        }
      },
      "feature": [
        {
          "name": "lvef",
          "description": "The most recent left ventricular ejection fraction (LVEF) recorded prior to the reference time point.",
          "value": {
            "path": "lvef",
            "dataType": "decimal"
          }
        }
      ]
    },
    {
      "url": "https://datatools4heart.eu/feature-groups/smoking_status",
      "join": {
        "on": {
          "pid": "pid"
        }
      },
      "feature": [
        {
          "name": "smoker",
          "description": "Indicates whether the patient's most recent recorded smoking status, collected before the reference time point, classifies them as a current smoker. A value of 1 denotes a current smoker, while 0 represents either a former smoker or someone who has never smoked.",
          "value": {
            "path": "iif(code = '449868002' or code = '428041000124106' or code = '77176002' or code = '230063004' or code = '230060001','1',iif(code = '8517006' or code = '266919005','0',{}))",
            "dataType": "code",
            "valueSet": {
              "concept": [
                {
                  "code": "1",
                  "display": "Smoker"
                },
                {
                  "code": "0",
                  "display": "Non-smoker"
                }
              ]
            }
          }
        }
      ]
    }
  ],
  "outcome": [
    {
      "url": "https://datatools4heart.eu/feature-groups/patient_demographics",
      "join": {
        "on": {
          "pid": "pid"
        }
      },
      "feature": [
        {
          "name": "months_to_death_or_last_record_date",
          "description": "The number of months between the reference time point and the patientâ€™s date of death (if known); otherwise, the number of months between the reference time point and the last known date of recorded activity related to the patient.",
          "value": {
            "path": "iif(deceasedDateTime.exists(),utl:getPeriod(%referenceTimePoint, deceasedDateTime, 'months'),utl:getPeriod(%referenceTimePoint, %lastRecordDate, 'months'))",
            "dataType": "integer"
          }
        },
        {
          "name": "deceased_in_12_months",
          "description": "Mortality recorded within the 12 months following the reference time point.",
          "value": {
            "path": "deceasedDateTime.exists() and utl:getPeriod(%referenceTimePoint, deceasedDateTime, 'months') <= 12",
            "dataType": "boolean"
          }
        },
        {
          "name": "deceased_in_24_months",
          "description": "Mortality recorded within the 24 months following the reference time point.",
          "value": {
            "path": "deceasedDateTime.exists() and utl:getPeriod(%referenceTimePoint, deceasedDateTime, 'months') <= 24",
            "dataType": "boolean"
          }
        },
        {
          "name": "deceased_in_36_months",
          "description": "Mortality recorded within the 36 months following the reference time point.",
          "value": {
            "path": "deceasedDateTime.exists() and utl:getPeriod(%referenceTimePoint, deceasedDateTime, 'months') <= 36",
            "dataType": "boolean"
          }
        },
        {
          "name": "deceased_in_48_months",
          "description": "Mortality recorded within the 48 months following the reference time point.",
          "value": {
            "path": "deceasedDateTime.exists() and utl:getPeriod(%referenceTimePoint, deceasedDateTime, 'months') <= 48",
            "dataType": "boolean"
          }
        }
      ]
    }
  ],
  "combinedFeature": [
    {
      "name": "maggic_total_score",
      "description": "Sum of MAGGIC points incl. SBPÃ—EF and AgeÃ—EF extras.",
      "combinedFeatures": [
        { "alias": "gndr", "featureNamePattern": "patient_demographics_gender" },
        { "alias": "nyha", "featureNamePattern": "nyha_nyha" },
        { "alias": "smk",  "featureNamePattern": "smoking_status_smoker" },
        { "alias": "dia",  "featureNamePattern": "conditions_has_diabetes_any" },
        { "alias": "hf18", "featureNamePattern": "conditions_heart_failure_occurred_prior_to_18_months_any" },
        { "alias": "bb",   "featureNamePattern": "med_admins_beta_blocker_use_administered" },
        { "alias": "ace", "featureNamePattern": "med_admins_ace_inhibitors_arb_use_administered" },
        { "alias": "bmi",  "featureNamePattern": "vital_signs_bmi_value_p3a_avg" },
        { "alias": "copd", "featureNamePattern": "conditions_has_chronic_obstructive_pulmonary_disease_any" },
        { "alias": "cr",   "featureNamePattern": "lab_results_creatinine_value_p3a_avg" },
        { "alias": "lvef", "featureNamePattern": "echocardiographs_lvef" },
        { "alias": "sbp",  "featureNamePattern": "vital_signs_systolic_blood_pressure_value_p3a_avg" },
        { "alias": "age",  "featureNamePattern": "patient_demographics_age" }
      ],
      "valueExpr": {
        "path": "iif(%gndr.exists() and (%gndr = 'male'), 1, 0) + iif(%nyha = 'LA28404-4', 0, iif(%nyha = 'LA28405-1', 2, iif(%nyha = 'LA28406-9', 6, iif(%nyha = 'LA28407-7', 8, 0)))) + iif(%smk.exists() and (%smk = '1' or %smk = true), 1, 0) + iif(%dia.exists() and %dia, 3, 0) + iif(%hf18.exists() and %hf18, 2, 0) + iif(%bb.exists() and %bb = true, 0, 3) + iif(%ace.exists() and %ace = true, 0, 1) + iif(%bmi.exists(), iif(%bmi < 15, 6, iif(%bmi < 20, 5, iif(%bmi < 25, 3, iif(%bmi < 30, 2, 0)))), 0) + iif(%copd.exists() and %copd, 2, 0) + iif(%cr.exists(), iif(%cr < 10.1808, 0, iif(%cr < 12.4432, 1, iif(%cr < 14.7056, 2, iif(%cr < 16.968, 3, iif(%cr < 19.2304, 4, iif(%cr < 23.7552, 5, iif(%cr < 28.28, 6, 8))))))), 0) + iif(%lvef.exists(), iif(%lvef < 20, 7, iif(%lvef < 25, 6, iif(%lvef < 30, 5, iif(%lvef < 35, 3, iif(%lvef < 40, 2, 0))))), 0) + iif(%age.exists() and %lvef.exists(), iif(%lvef < 30, iif(%age < 55, 0, iif(%age < 60, 1, iif(%age < 65, 2, iif(%age < 70, 4, iif(%age < 75, 6, iif(%age < 80, 8, 10)))))), iif(%lvef < 40, iif(%age < 55, 0, iif(%age < 60, 2, iif(%age < 65, 4, iif(%age < 70, 6, iif(%age < 75, 8, iif(%age < 80, 10, 13)))))), iif(%age < 55, 0, iif(%age < 60, 3, iif(%age < 65, 5, iif(%age < 70, 7, iif(%age < 75, 9, iif(%age < 80, 12, 15)))))))), 0) + iif(%sbp.exists() and %lvef.exists(), iif(%lvef < 30, iif(%sbp < 110, 5, iif(%sbp < 120, 4, iif(%sbp < 130, 3, iif(%sbp < 140, 2, iif(%sbp < 150, 1, 0))))), iif(%lvef < 40, iif(%sbp < 110, 3, iif(%sbp < 120, 2, iif(%sbp < 130, 1, iif(%sbp < 140, 1, 0)))), iif(%sbp < 110, 2, iif(%sbp < 120, 1, iif(%sbp < 130, 1, 0))))), 0)",
        "dataType": "integer"
      }
    }
  ]
}